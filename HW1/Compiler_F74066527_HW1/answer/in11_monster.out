var      	 VAR
x        	 IDENT
int32    	 INT
=        	 ASSIGN
9        	 INT_LIT
         	 NEWLINE
var      	 VAR
y        	 IDENT
int32    	 INT
=        	 ASSIGN
-        	 SUB
87       	 INT_LIT
         	 NEWLINE
var      	 VAR
z        	 IDENT
int32    	 INT
=        	 ASSIGN
23       	 INT_LIT
         	 NEWLINE
var      	 VAR
_f_123   	 IDENT
float32  	 FLOAT
=        	 ASSIGN
-        	 SUB
212.3    	 FLOAT_LIT
         	 NEWLINE
var      	 VAR
a        	 IDENT
int32    	 INT
=        	 ASSIGN
int32    	 INT
(        	 LPAREN
_f_123   	 IDENT
)        	 RPAREN
         	 NEWLINE
var      	 VAR
b        	 IDENT
int32    	 INT
         	 NEWLINE
if       	 IF
x        	 IDENT
<        	 LSS
a        	 IDENT
{        	 LBRACE
         	 NEWLINE
x        	 IDENT
++       	 INC
         	 NEWLINE
}        	 RBRACE
else     	 ELSE
if       	 IF
x        	 IDENT
<        	 LSS
b        	 IDENT
{        	 LBRACE
         	 NEWLINE
print    	 PRINT
(        	 LPAREN
x        	 IDENT
<=       	 LEQ
z        	 IDENT
||       	 LOR
x        	 IDENT
<=       	 LEQ
(        	 LPAREN
y        	 IDENT
-        	 SUB
z        	 IDENT
)        	 RPAREN
&&       	 LAND
!        	 NOT
(        	 LPAREN
y        	 IDENT
<=       	 LEQ
z        	 IDENT
)        	 RPAREN
)        	 RPAREN
         	 NEWLINE
}        	 RBRACE
else     	 ELSE
{        	 LBRACE
         	 NEWLINE
x        	 IDENT
--       	 DEC
         	 NEWLINE
if       	 IF
x        	 IDENT
>        	 GTR
a        	 IDENT
&&       	 LAND
x        	 IDENT
<        	 LSS
b        	 IDENT
{        	 LBRACE
         	 NEWLINE
x        	 IDENT
++       	 INC
         	 NEWLINE
}        	 RBRACE
else     	 ELSE
if       	 IF
x        	 IDENT
>        	 GTR
b        	 IDENT
{        	 LBRACE
         	 NEWLINE
x        	 IDENT
--       	 DEC
         	 NEWLINE
}        	 RBRACE
         	 NEWLINE
print    	 PRINT
(        	 LPAREN
x        	 IDENT
)        	 RPAREN
         	 NEWLINE
{        	 LBRACE
         	 NEWLINE
var      	 VAR
gggggggggggg 	 IDENT
float32  	 FLOAT
         	 NEWLINE
gggggggggggg 	 IDENT
+=       	 ADD_ASSIGN
float32  	 FLOAT
(        	 LPAREN
x        	 IDENT
)        	 RPAREN
         	 NEWLINE
println  	 PRINTLN
(        	 LPAREN
gggggggggggg 	 IDENT
<        	 LSS
3.0      	 FLOAT_LIT
)        	 RPAREN
         	 NEWLINE
var      	 VAR
TRUE     	 IDENT
bool     	 BOOL
=        	 ASSIGN
false    	 FALSE
         	 NEWLINE
if       	 IF
!        	 NOT
TRUE     	 IDENT
{        	 LBRACE
         	 NEWLINE
var      	 VAR
STRING   	 IDENT
string   	 STRING
=        	 ASSIGN
"        	 QUOTA
string   	 STRING
"        	 QUOTA
         	 NEWLINE
println  	 PRINTLN
(        	 LPAREN
STRING   	 IDENT
)        	 RPAREN
         	 NEWLINE
}        	 RBRACE
         	 NEWLINE
}        	 RBRACE
         	 NEWLINE
/*OuO
        	 C Comment
	Construct a compiler is very fun.
        	 C Comment

        	 C Comment
	NULL
        	 C Comment
	NEWLINE
        	 C Comment
	x -= 1000
        	 C Comment
	\n
        	 C Comment
	%^#&!#&@%&^%#&*@%
        	 C Comment
	*/       	 C Comment
x        	 IDENT
++       	 INC
// Increase x /* after comment */ 	 C++ Comment
         	 NEWLINE
/* */       	 C Comment
/*
        	 C Comment
		*/       	 C Comment
/* */       	 C Comment
         	 NEWLINE
         	 NEWLINE
for      	 FOR
x        	 IDENT
>        	 GTR
0        	 INT_LIT
{        	 LBRACE
         	 NEWLINE
x        	 IDENT
+=       	 ADD_ASSIGN
(        	 LPAREN
9        	 INT_LIT
*        	 MUL
-        	 SUB
8        	 INT_LIT
)        	 RPAREN
/        	 QUO
a        	 IDENT
+        	 ADD
3        	 INT_LIT
-        	 SUB
(        	 LPAREN
100      	 INT_LIT
%        	 REM
7        	 INT_LIT
)        	 RPAREN
         	 NEWLINE
x        	 IDENT
%=       	 REM_ASSIGN
4        	 INT_LIT
         	 NEWLINE
println  	 PRINTLN
(        	 LPAREN
x        	 IDENT
+        	 ADD
3        	 INT_LIT
)        	 RPAREN
         	 NEWLINE
}        	 RBRACE
         	 NEWLINE
println  	 PRINTLN
(        	 LPAREN
"        	 QUOTA
Finish   	 STRING
"        	 QUOTA
)        	 RPAREN
         	 NEWLINE
}        	 RBRACE

Finish scanning,
total line: 47
comment line: 11
